# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches:
      - master
      - 0.1.0
    tags:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test
      run: |
        pwd
        pip install .
        fdog.setup -d /home/runner/work/fDOG/fDOG/dt
        fdog.showTaxa
        fdog.run --seqFile infile.fa --jobName test --refspec HUMAN@9606@3 --fasoff
        mkdir seeds
        file='/home/runner/work/fDOG/fDOG/dt/genome_dir/HUMAN@9606@3/HUMAN@9606@3.fa'; for i in $(grep ">" $file | head); do id=$(echo $i | sed 's/>//'); grep -A1 $i $file > seeds/$id.fa; done
        fdogs.run --seqFolder seeds --jobName test_multi --refspec HUMAN@9606@3 --fasoff
        head /home/runner/work/fDOG/fDOG/dt/genome_dir/HUMAN@9606@3/HUMAN@9606@3.fa > hm.fa
        fdog.addTaxon -f hm.fa -i 9606 -o ./ -c -a
        ls
    - name: Deploy
      if: startsWith(github.event.ref, 'refs/tags')
      uses: casperdcl/deploy-pypi@v2
      with:
        password: ${{ secrets.pypi }}
        build: true
        upload: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
